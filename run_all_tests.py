#!/usr/bin/env python3
"""
–ü–æ–ª–Ω—ã–π –∑–∞–ø—É—Å–∫ –í–°–ï–• —Ç–µ—Å—Ç–æ–≤ –¥–∏–ø–ª–æ–º–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º API
"""

import subprocess
import sys
import os
import requests
from urls import BaseUrls


def check_api_availability():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Ç–µ—Å—Ç–æ–≤"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API...")
    try:
        response = requests.get(BaseUrls.API_BASE, timeout=10)
        print(f"‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω! –°—Ç–∞—Ç—É—Å: {response.status_code}")
        return True
    except Exception as e:
        print(f"‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        return False


def run_all_tests():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –í–°–ï —Ç–µ—Å—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞"""

    print("üöÄ –ó–ê–ü–£–°–ö –ü–û–õ–ù–û–ô –ü–†–û–í–ï–†–ö–ò –î–ò–ü–õ–û–ú–ù–û–ì–û –ü–†–û–ï–ö–¢–ê")
    print("=" * 60)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
    api_available = check_api_availability()

    # –ë–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã (–≤—Å–µ–≥–¥–∞ –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è)
    test_files = [
        "test_imports.py",
        "test_modules.py",
        "test_with_mocks.py",
        "test_all_mocked.py"
    ]

    # –ï—Å–ª–∏ API –¥–æ—Å—Ç—É–ø–Ω–æ, –¥–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –∏–∑ –ø–∞–ø–∫–∏ tests/
    if api_available:
        print("üéØ API –¥–æ—Å—Ç—É–ø–µ–Ω! –ó–∞–ø—É—Å–∫–∞–µ–º –í–°–ï —Ç–µ—Å—Ç—ã...")
        test_files.extend([
            "tests/test_create_user.py",
            "tests/test_login_user.py",
            "tests/test_create_order.py"
        ])
    else:
        print("‚ö†Ô∏è  API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –º–æ–∫-—Ç–µ—Å—Ç—ã...")

    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    os.makedirs("allure-results", exist_ok=True)

    print("üìã –ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞:")
    for test_file in test_files:
        print(f"   ‚Ä¢ {test_file}")
    print("=" * 60)

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    result = subprocess.run([
        "pytest",
        *test_files,
        "-v",
        "--alluredir=allure-results",
        "--tb=short",
        "--strict-markers"
    ], capture_output=False)

    print("=" * 60)

    if result.returncode == 0:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ –ò–º–ø–æ—Ä—Ç—ã –±–µ–∑ –æ—à–∏–±–æ–∫")
        print("‚úÖ API –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞")
        print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞—é—Ç")
        if api_available:
            print("‚úÖ –†–µ–∞–ª—å–Ω—ã–µ API —Ç–µ—Å—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã")
        else:
            print("‚ö†Ô∏è  –†–µ–∞–ª—å–Ω—ã–µ API —Ç–µ—Å—Ç—ã –ø—Ä–æ–ø—É—â–µ–Ω—ã (API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ)")
    else:
        print("‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")

    print("\nüìä –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
    print("   allure serve allure-results")

    return result.returncode


if __name__ == "__main__":
    exit_code = run_all_tests()
    sys.exit(exit_code)